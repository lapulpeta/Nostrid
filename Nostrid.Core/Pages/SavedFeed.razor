@page "/feed/{id}"

@code {
    [Parameter, EditorRequired]
    public string Id { get; set; } = null!;
}

@using Nostrid.Data
@using Nostrid.Data.Relays;
@using Nostrid.Model;
@using Nostrid.Misc;
@inject AccountService accountService
@inject FeedService feedService
@inject NavigationManager navigationManager

<div class="d-flex flex-row">
    <h2>
        @if (hashtags != null)
        {
            <span>#@string.Join(" #", hashtags)</span>
        }
    </h2>
    <button class="btn btn-sm btn-outline-danger mb-2 ms-3" type="button" @onclick="@Delete">
        <i class="bi bi-trash3"></i>
    </button>
</div>

<FeedViewer BaseFilter="@filter" MessageKinds="@(new[]{NostrKind.Text, NostrKind.Repost})" />

@code {
    private SubscriptionFilter? filter;
    private string[]? hashtags;
    private long id;

    protected override void OnParametersSet()
    {
        id = long.Parse(Id);
        if (accountService.MainAccount != null)
        {
            FeedSource feedSource = feedService.GetFeedSource(id);
            if (feedSource != null && feedSource.OwnerId == accountService.MainAccount.Id)
            {
                hashtags = feedSource.Hashtags.ToArray();
                filter = new TagSubscriptionFilter(hashtags);
            }
        }
    }

    private void Delete()
    {
        feedService.DeleteFeedSource(id);
        navigationManager.NavigateTo($"/");
    }
}